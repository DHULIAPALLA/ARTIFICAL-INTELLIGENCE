graph={'A':['B','C','D'],'B':['E','F'],'C':['F','G'],'D':[],'E':['H','I'],'F':['J'],'G':[],'H':[],'I':[],'J':[]}
start=input("enter start node")
goal=input("enter goal state")
queue=[]
closed=[]
found=False
def bfs(node):
    queue.append(node)
    while queue:
        s=queue.pop(0)
        closed.append(s)
        for neighbour in graph[s]:
            if neighbour not in closed:
                queue.append(neighbour)
        print(queue,end=' ')
        print(closed)
        if s==goal:
            found=True
            return found
       
res=bfs(start)
if res==True:
    print("found",goal)
else:
    print("not found")
